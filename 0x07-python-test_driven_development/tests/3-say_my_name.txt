===========================
How to Use 3-say_my_name.py
===========================

This modules contains  a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` display "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Ismael", "Abdulahi")
    My name is Ismael Abdulahi

::

    >>> say_my_name("Cornelius Maxwell", "Jones II")
    My name is Cornelius Maxwell Jones II

The parameter ```last_name``` is not required.If no last name is given,
an empty string is printed instead.

::

    >>> say_my_name("Julian")
    My name is Julian 

Name Requirements
=============

The parameters ``first_name`` and ``last_name``` have to be strings. If not,
a TypeError is thrown.

::

    >>> say_my_name(9, "Guillaume")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Mcgregor", ["Cavs", "Bakers", "Tomas"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Steven": 8, "James": 33}, 9.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

You need to provide at least one name.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
